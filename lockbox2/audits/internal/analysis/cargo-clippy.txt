  --> programs/liquidity_lockbox/src/state.rs:39:8
   |
39 |   ) -> Result<()> {
   |        ^^^^^^^^^^ the `Err`-variant is at least 160 bytes
   |
   = help: try reducing the size of `anchor_lang::error::Error`, for example by boxing large elements or replacing it with `Box<anchor_lang::error::Error>`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err
   = note: `#[warn(clippy::result_large_err)]` on by default

warning: the `Err`-variant returned from this function is very large
  --> programs/liquidity_lockbox/src/lib.rs:47:8
   |
47 |   ) -> Result<()> {
   |        ^^^^^^^^^^ the `Err`-variant is at least 160 bytes
   |
   = help: try reducing the size of `anchor_lang::error::Error`, for example by boxing large elements or replacing it with `Box<anchor_lang::error::Error>`
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err

warning: the `Err`-variant returned from this function is very large
   --> programs/liquidity_lockbox/src/lib.rs:128:8
    |
128 |   ) -> Result<()> {
    |        ^^^^^^^^^^ the `Err`-variant is at least 160 bytes
    |
    = help: try reducing the size of `anchor_lang::error::Error`, for example by boxing large elements or replacing it with `Box<anchor_lang::error::Error>`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err

warning: the `Err`-variant returned from this function is very large
   --> programs/liquidity_lockbox/src/lib.rs:312:8
    |
312 |   ) -> Result<()> {
    |        ^^^^^^^^^^ the `Err`-variant is at least 160 bytes
    |
    = help: try reducing the size of `anchor_lang::error::Error`, for example by boxing large elements or replacing it with `Box<anchor_lang::error::Error>`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err

warning: the `Err`-variant returned from this function is very large
   --> programs/liquidity_lockbox/src/lib.rs:460:105
    |
460 | fn get_liquidity_from_token_a(amount: u128, sqrt_price_lower_x64: u128, sqrt_price_upper_x64: u128 ) -> Result<u128> {
    |                                                                                                         ^^^^^^^^^^^^ the `Err`-variant is at least 160 bytes
    |
    = help: try reducing the size of `anchor_lang::error::Error`, for example by boxing large elements or replacing it with `Box<anchor_lang::error::Error>`
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#result_large_err

warning: returning the result of a `let` binding from a block
   --> programs/liquidity_lockbox/src/lib.rs:476:3
    |
471 | /   let liquidity = quotient
472 | |     .mul(U256Muldiv::new(0, amount))
473 | |     .shift_word_right()
474 | |     .try_into_u128()
475 | |     .or(Err(ErrorCode::WhirlpoolNumberDownCastError.into()));
    | |_____________________________________________________________- unnecessary `let` binding
476 |     liquidity
    |     ^^^^^^^^^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#let_and_return
    = note: `#[warn(clippy::let_and_return)]` on by default
help: return the expression directly
    |
471 ~   
472 ~   quotient
473 +     .mul(U256Muldiv::new(0, amount))
474 +     .shift_word_right()
475 +     .try_into_u128()
476 +     .or(Err(ErrorCode::WhirlpoolNumberDownCastError.into()))
    |

warning: `liquidity_lockbox` (lib) generated 6 warnings (run `cargo clippy --fix --lib -p liquidity_lockbox` to apply 1 suggestion)
    Finished dev [unoptimized + debuginfo] target(s) in 1m 00s
